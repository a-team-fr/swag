# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
    branches: [ master ]
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
    branches: [ master ]

env:
  QT_VERSION: 5.14.2


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    name: "linux Latest x64"
    runs-on: ubuntu-18.04


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '${{ env.QT_VERSION }}'
        host: 'linux'
        target: 'desktop'
        dir: '${{ github.workspace }}'
        install-deps: 'true'
        modules: 'qtcharts qtdatavis3d qtwebengine'
        mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
        cached: 'false'

    # Runs a set of commands using the runners shella
    - name: fetch submodule
      run: git submodule update --init
    - name: build swag
      run: |
          qmake "CONFIG+=release"
          make
    - name: create appimage
      run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          chmod a+x ./deploy2lin.sh
          ./deploy2lin.sh "${{ github.workspace }}/qt/${{ env.QT_VERSION }}/"
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: swag-linux-${{ env.QT_VERSION }}.zip
        path: ./swag*.AppImage*
